{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Algol68",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#modes"
    },
    {
      "include": "#predefined-const"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "comment.sharp.multiline.algol68",
          "begin": "#",
          "end": "#"
        },
        {
          "name": "comment.comment.multiline.algol68",
          "begin": "COMMENT",
          "end": "COMMENT"
        },
        {
          "name": "comment.co.multiline.algol68",
          "begin": "CO",
          "end": "CO"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.algol68",
          "match": "\\b(BEGIN|END|FOR|FROM|BY|TO|DO|OD|INT|REAL|BOOL|CHAR|STRUCT)\\b"
        },
        {
          "name": "keyword.control.if.algol68",
          "match": "\\b(IF|THEN|ELSE|ELIF|FI)\\b"
        },
        {
          "name": "entity.name.function.algol68",
          "match": "\\b(PROC)\\b"
        },
        {
          "name": "entity.name.function.algol68",
          "match": "\\b(ABS|LWB|UPB)\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.algol68",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.algol68",
          "match": "\\\\."
        }
      ]
    },
    "modes": {
      "patterns": [
        {
          "name": "entity.name.type.algol68",
          "match": "\\b(INT|REAL|BOOL|CHAR|STRUCT)\\b"
        },
        {
          "name": "entity.name.type.algol68",
          "match": "\\b(INT|REAL|BOOL|CHAR|STRUCT)\\b"
        },
        {
          "name": "keyword.control.algol68",
          "match": "\\b(REPR|LONG)\\b"
        }
      ]
    },
    "predefined-const": {
      "patterns": [
        {
          "name": "entity.name.label.char.algol68",
          "match": "\\b(newline|blank)\\b"
        },
        {
          "name": "entity.name.label.int.algol68",
          "match": "\\b(max int|long max int|long long max int)\\b"
        }
      ]
    }
  },
  "scopeName": "text.algol.algol68"
}
